[09 월 26일 월요일]

변수: 값 저장
	- 자료형
	  기본형: boolean / char / int(long) / double
	  참조형: 배열 / 클래스 (new 이용)

배열: 동일한 자료형
클래스: 다른 자료형 + 메서드
	` 생성자: 클래스명과 동일 / 리턴 타입 X
	` 공유: static
		- 클래스명으로 접근(객체 생성 X)
	` overloading: 메서드명 동일 / 인자가 다른 함수들

상속
	[설계 시]
	` 부모 클래스: 공통 기능
	` 자식 클래스: 고유 기능

	[사용 시]
	` 부모가 가진 멤버 그냥 사용 가능
	` 부모에게 없는 메버는 그냥 추가해서 사용
	` 부모한테 있지만 변경(재정의) - overriding
		: 메서드명, 인자, 리턴 타입, 접근 지정자(크거나) 동일해야 한다

부모 변수에 자식 객체 생성 가능 -> 다형성

abstract: 미완성
	- 메서드: overriding 강제성
	- 클래스: 객체 생성 X, 부모 클래스로만 설정 가능

final: 변경 불가
	- 필드: 값 변경 안 됨
	- 메서드: overriding X
	- 클래스: 부모 클래스가 될 수 없음

-------------------------------------------------------------------------------
# modifier

[1] class A {
	[2] int A;
	[3] A() {}
	[4] void A() {}
}

[1]: public / protected / abstract / final
	* inner class: private 가능
[2]: public / protected / private / static / final
[3]: public / protected / private
[4]: public / protected / private / static / abstract / final

===================================================

class A {
	[1] int A;
	[2] void B() {}
}

interface B {
	int B;
	void B();
}
	` 생성자 X -> static 강제
	` 모두가 추상 메서드

	[1] public static final
	[2] piblic abstract





